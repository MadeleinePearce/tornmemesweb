const urlParams = new URLSearchParams(window.location.search);

$('#alert-message').hide();

if (localStorage.getItem('apikey') !== null || sessionStorage.getItem('apikey') !== null) {
	$('#login-button').hide();
	$('#profile-button').show();
	var username = sessionStorage.getItem('username') || localStorage.getItem('username');
	var torn_id = sessionStorage.getItem('torn_id') || localStorage.getItem('torn_id');
	var apikey = sessionStorage.getItem('apikey') || localStorage.getItem('apikey');
	$('#torn-user-id').val(username + ' [' + torn_id + ']');
	$('#tornmemes-api-key').val(apikey);
}

$(document).ready(function () {
	$('body').tooltip({ selector: '[data-toggle=tooltip]' });
});

toggleFlag = (el) => {
	if (el.is(':checked')) {
		$('#remember-me-flag').val('true');
	} else {
		$('#remember-me-flag').val('false');
	}
};

setMemeModal = (url) => {
	$('#meme-image-link').attr('src', url);
};

if (total_pages === 0) {
	$('#pagination-ui').hide();
} else {
	var current_page = parseInt(urlParams.get('page') || '1');
	$('#current-page').html(current_page);
	if (memes_on_page === 0) {
		$('#prev-button').removeClass('disabled');
		$('#prev-button-link').attr('href', '/?page=' + (current_page - 1));
	} else if (memes_on_page !== 0 && current_page === 1) {
		if (current_page + 1 <= total_pages) {
			$('#next-button').removeClass('disabled');
			$('#next-button-link').attr('href', '/?page=' + (current_page + 1));
		}
	} else if (memes_on_page !== 0 && current_page > 1) {
		$('#prev-button').removeClass('disabled');
		$('#prev-button-link').attr('href', '/?page=' + (current_page - 1));
		if (current_page + 1 <= total_pages) {
			$('#next-button').removeClass('disabled');
			$('#next-button-link').attr('href', '/?page=' + (current_page + 1));
		}
	}
}

authTornPlayer = (apikey, flag) => {
	$('#login-button').attr('disabled', true);
	$('#alert-message').removeClass('alert-danger');
	$('#alert-message').removeClass('alert-success');
	$('#alert-message').hide();
	const formData = new FormData();
	formData.append('tornapikey', apikey);
	fetch('/api/v1/login', {
		method: 'POST',
		body: formData,
	})
		.then((res) => res.json())
		.then((res) => {
			if (res.status === 200) {
				$('#alert-message').html('Login Success');
				$('#alert-message').addClass('alert-success');
				$('#alert-message').show();
				setTimeout(() => {
					$('#close-login-modal').click();
				}, 1500);
				$('#login-button').hide();
				$('#profile-button').show();
				if (flag == 'true') {
					localStorage.setItem('apikey', res.result.apikey);
					localStorage.setItem('username', res.result.username);
					localStorage.setItem('torn_id', res.result.torn_id);
				} else {
					sessionStorage.setItem('apikey', res.result.apikey);
					sessionStorage.setItem('username', res.result.username);
					sessionStorage.setItem('torn_id', res.result.torn_id);
				}
				$('#torn-user-id').val(res.result.username + ' [' + res.result.torn_id + ']');
				$('#tornmemes-api-key').val(res.result.apikey);
			} else {
				$('#alert-message').html(res.status + ' : ' + res.message);
				$('#alert-message').addClass('alert-danger');
				$('#alert-message').show();
			}
		})
		.catch((error) => {
			console.log(error);
			$('#alert-message').html(error.message);
			$('#alert-message').addClass('alert-danger');
			$('#alert-message').show();
		});
	$('#login-button').attr('disabled', false);
};

handleLogout = () => {
	localStorage.clear();
	sessionStorage.clear();
	$('#login-button').show();
	$('#profile-button').hide();
	$('#torn-user-id').val('');
	$('#tornmemes-api-key').val('');
	$('#close-profile-modal').click();
};

handleReaction = (meme_id, reaction) => {
	$('#meme-id-' + meme_id + '-like-btn').attr('disabled', true);
	$('#meme-id-' + meme_id + '-dislike-btn').attr('disabled', true);
	if (localStorage.getItem('apikey') === null && sessionStorage.getItem('apikey') === null) {
		$('#loginModal').modal('show');
	} else {
		var apikey = sessionStorage.getItem('apikey') || localStorage.getItem('apikey');
		const formData = new FormData();
		formData.append('apikey', apikey);
		formData.append('meme_id', meme_id);
		if (reaction === 'dislike') {
			formData.append('reaction', 'D');
		} else {
			formData.append('reaction', 'U');
		}
		fetch('/api/v1/reactions', {
			method: 'POST',
			body: formData,
		})
			.then((res) => res.json())
			.then((res) => {
				console.log(res);
				if (res.status === 200) {
					$('#meme-id-' + meme_id + '-likes').html(res.result.likes);
					$('#meme-id-' + meme_id + '-dislikes').html(res.result.dislikes);
				} else {
					alert(res.status + ' : ' + res.message);
				}
			})
			.catch((err) => {
				console.log(err);
			});
	}
	$('#meme-id-' + meme_id + '-like-btn').attr('disabled', false);
	$('#meme-id-' + meme_id + '-dislike-btn').attr('disabled', false);
};
